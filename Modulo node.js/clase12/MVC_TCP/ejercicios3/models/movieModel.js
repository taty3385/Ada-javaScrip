// # Ejercicio 3: Sistema de GestiÃ³n de PelÃ­culas ðŸŽ¬
// # Consigna:
// # Implementar un sistema de gestiÃ³n de pelÃ­culas donde el cliente pueda
// # solicitar informaciÃ³n sobre una pelÃ­cula especÃ­fica a travÃ©s de su tÃ­tulo. El
// # servidor procesarÃ¡ la solicitud, buscarÃ¡ la pelÃ­cula en una base de datos
// # simulada (archivo JSON) y devolverÃ¡ la informaciÃ³n al cliente.
// # Pasos a seguir:
// # 1. Servidor TCP:
// # o El servidor debe escuchar en el puerto 4002.
// # o Debe recibir solicitudes del cliente que incluyan el tÃ­tulo de
// # una pelÃ­cula.
// # o Utilizar el patrÃ³n MVC:
// # â–ª Modelo: Encargado de leer el archivo JSON
// # (movies.json) que contiene la lista de pelÃ­culas y buscar
// # la pelÃ­cula por tÃ­tulo.
// # â–ª Vista: Encargada de formatear la respuesta que se
// # enviarÃ¡ al cliente (en formato JSON).
// # â–ª Controlador: Encargado de recibir la solicitud del
// # cliente, llamar al modelo para obtener los datos y
// # luego pasar esos datos a la vista para formatear la
// # respuesta.
// # o El servidor debe enviar la respuesta al cliente y cerrar la
// # conexiÃ³n.
// # 2. Cliente TCP:
// # o El cliente debe conectarse al servidor y enviar el tÃ­tulo de una
// # pelÃ­cula.
// # o Debe recibir la respuesta del servidor y mostrarla en la
// # consola.
// # o El cliente debe permitir al usuario ingresar el tÃ­tulo de la
// # pelÃ­cula que desea consultar.
// # Estructura del Proyecto:
// # â€¢ models/movieModel.js: Modelo para manejar la lista de pelÃ­culas.
// # â€¢ views/movieView.js: Vista para formatear la respuesta.
// # â€¢ controllers/movieController.js: Controlador para manejar las
// # solicitudes.
// # â€¢ server.js: Servidor TCP.
// # â€¢ client.js: Cliente TCP.

const fs = require("fs");
const path = require("path");

const dataPath = path.join(__dirname, "../peli.json");

movieModels = {
  getTitleMovie: (title) => {
    const data = fs.readFileSync(dataPath);
    const movies = JSON.parse(data);
    return movies.find((movie) => movie.title === title) || null;
  },
};
module.exports = movieModels;
